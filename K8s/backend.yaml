apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    name: backend-dep
  annotations:
    class: backend-k8s
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: backend
      app: diceK8s-project
  template:
    metadata:
      labels:
        tier: backend
        app: diceK8s-project
    spec:
      containers:
      - name: backend
        image: sannan1357/backend:v1.0
        ports:
        - containerPort: 8080
          name: tcp
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /hello
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /hello
            port: 8080
          initialDelaySeconds: 3
          failureThreshold: 2
          periodSeconds: 3
        volumeMounts:
        - name: configmap-volume
          mountPath: /users
      serviceAccountName: backend-service-account
      volumes:
      - name: configmap-volume
        configMap:
          name: backend-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    name: backend-svc
spec:
  type: ClusterIP
  selector:
    tier: backend
    app: diceK8s-project
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: ROOT_PASSWORD
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: ServiceAccount
  name: backend-service-account
